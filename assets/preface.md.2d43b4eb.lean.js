import{_ as a,o,c as s,k as e,a as t}from"./chunks/framework.b2e9bf53.js";const v=JSON.parse('{"title":"前言","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"preface.md","filePath":"preface.md"}'),n={name:"preface.md"},c=e("h1",{id:"前言",tabindex:"-1"},[t("前言 "),e("a",{class:"header-anchor",href:"#前言","aria-label":'Permalink to "前言"'},"​")],-1),l=e("p",null,[t("你可能会疑惑，为什么要再学习一门如此 "),e("code",null,"low level"),t(" 的语言， C 难道不好吗？")],-1),r=e("p",null,"C 很好，非常好，它非常成功，以至于 C 现在已经不再是一门语言，而是一个标准。 你可能会注意到，现在跨语言调用，基本都是遵循的C ABI,包括编译出来的各种库供其他语言使用，也都是 C 可以使用的动态链接库。",-1),d=e("p",null,"但由于历史原因，C 到现在已经处于一种较为割裂的存在，它本身有着一套自己的标准，但是不同的编译器却有着不同的“专属语法”，也就是不同编译器支持的语法实际上是 C 的超集！同时 C 本身没有一个属于自己的包管理器，各式各样的第三方包管理器。。。五花八门，像meson、cmake、xmake、vcpkg，而且均有上手难度。",-1),i=e("p",null,"历史上有不少语言都自诩是 C 的替代品，像Odin、Ada、Modula-2、Go，他们在某种程度上都算是失败了，当然 zig 的未来也可能是这样子，成为一个不是C的替代品，单独的一门语言，或许有人使用。但就现在来看，我认为 zig 还是很有希望称为 C 的代替品的，目前的语法均是围绕着语义明确化，减少隐式的执行，减少并高呢更好的跟踪错误。",-1),_=e("p",null,"所以我写了这个文档，zig 的社区需要更多的人来构建，帮助新人来更好的理解和学习 zig！",-1),p=[c,l,r,d,i,_];function h(f,m,u,C,k,g){return o(),s("div",null,p)}const z=a(n,[["render",h]]);export{v as __pageData,z as default};
