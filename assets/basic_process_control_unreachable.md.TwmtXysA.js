import{_ as s,o as a,c as n,R as e}from"./chunks/framework.XiqD54nH.js";const _=JSON.parse('{"title":"unreachable","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"basic/process_control/unreachable.md","filePath":"basic/process_control/unreachable.md","lastUpdated":1700737288000}'),l={name:"basic/process_control/unreachable.md"},o=e(`<h1 id="unreachable" tabindex="-1">unreachable <a class="header-anchor" href="#unreachable" aria-label="Permalink to &quot;unreachable&quot;">​</a></h1><p>在 <code>Debug</code> 和 <code>ReleaseSafe</code> 模式下，<code>unreachable</code> 会调用 <code>panic</code> ，并显示消息达到 unreachable code。</p><p>在 <code>ReleaseFast</code> 和 <code>ReleaseSmall</code> 模式下，编译器假设永远不会执行到 <code>unreachable</code> 来对代码进行优化 。</p><div class="language-zig vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zig</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> = </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">y</span><span style="color:#E1E4E8;"> = </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">y</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">unreachable</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#E36209;">x</span><span style="color:#24292E;"> = </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#E36209;">y</span><span style="color:#24292E;"> = </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">x</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#E36209;">y</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">unreachable</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,4),p=[o];function c(t,r,E,y,i,d){return a(),n("div",null,p)}const u=s(l,[["render",c]]);export{_ as __pageData,u as default};
